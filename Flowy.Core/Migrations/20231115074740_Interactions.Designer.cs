// <auto-generated />
using System;
using Flowy.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flowy.Core.Migrations
{
    [DbContext(typeof(FlowyContext))]
    [Migration("20231115074740_Interactions")]
    partial class Interactions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Flowy.Core.Models.Draft", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<long>("IdScope")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Schema")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdScope");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("Flowy.Core.Models.DraftTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EventAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdDraft")
                        .HasColumnType("bigint");

                    b.Property<string>("Operation")
                        .HasColumnType("longtext");

                    b.Property<string>("SchemaBackup")
                        .HasColumnType("longtext");

                    b.Property<string>("UserIdentifier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdDraft");

                    b.ToTable("DraftTracks");
                });

            modelBuilder.Entity("Flowy.Core.Models.InsatnceData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdInsatnce")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdInsatnce");

                    b.ToTable("InsatnceDatas");
                });

            modelBuilder.Entity("Flowy.Core.Models.Instance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdProcess")
                        .HasColumnType("bigint");

                    b.Property<long>("Key")
                        .HasColumnType("bigint");

                    b.Property<string>("Reference")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdProcess");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("Flowy.Core.Models.InstanceTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EventAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdInstance")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("Operation")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdInstance");

                    b.ToTable("InstanceTracks");
                });

            modelBuilder.Entity("Flowy.Core.Models.Interaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<long>("IdScope")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdScope");

                    b.ToTable("Interactions");
                });

            modelBuilder.Entity("Flowy.Core.Models.Process", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("BpmnProcessId")
                        .HasColumnType("longtext");

                    b.Property<long>("IdScope")
                        .HasColumnType("bigint");

                    b.Property<long>("Key")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .HasColumnType("longtext");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdScope");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Flowy.Core.Models.Scope", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<long>("IdTenant")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdTenant");

                    b.ToTable("Scopes");
                });

            modelBuilder.Entity("Flowy.Core.Models.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Flowy.Core.Models.Draft", b =>
                {
                    b.HasOne("Flowy.Core.Models.Scope", "Scope")
                        .WithMany()
                        .HasForeignKey("IdScope")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Flowy.Core.Models.DraftTrack", b =>
                {
                    b.HasOne("Flowy.Core.Models.Draft", "Draft")
                        .WithMany()
                        .HasForeignKey("IdDraft")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Draft");
                });

            modelBuilder.Entity("Flowy.Core.Models.InsatnceData", b =>
                {
                    b.HasOne("Flowy.Core.Models.Instance", "Instance")
                        .WithMany("Datas")
                        .HasForeignKey("IdInsatnce")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("Flowy.Core.Models.Instance", b =>
                {
                    b.HasOne("Flowy.Core.Models.Process", "Process")
                        .WithMany()
                        .HasForeignKey("IdProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Flowy.Core.Models.InstanceTrack", b =>
                {
                    b.HasOne("Flowy.Core.Models.Instance", "Instance")
                        .WithMany("Tracks")
                        .HasForeignKey("IdInstance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("Flowy.Core.Models.Interaction", b =>
                {
                    b.HasOne("Flowy.Core.Models.Scope", "Scope")
                        .WithMany()
                        .HasForeignKey("IdScope")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Flowy.Core.Models.Process", b =>
                {
                    b.HasOne("Flowy.Core.Models.Scope", "Scope")
                        .WithMany()
                        .HasForeignKey("IdScope")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Flowy.Core.Models.Scope", b =>
                {
                    b.HasOne("Flowy.Core.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("IdTenant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Flowy.Core.Models.Instance", b =>
                {
                    b.Navigation("Datas");

                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
